{"ast":null,"code":"var _jsxFileName = \"/Users/hichamelkaddouri/Desktop/ok/src/Movie/Movie.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport Video from './Video/Video';\nimport { Container } from 'react-bootstrap';\nimport Presentation from './Presentation/Presentation';\nimport Aos from 'aos';\nimport 'aos/dist/aos.css';\nimport './Movie.css';\n\nclass MovieId extends Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n    this.state = {\n      movie: ''\n    };\n\n    this.infoMovie = () => {\n      axios.get(`https://api.themoviedb.org/3/movie/${this.props.match.params.id}?api_key=1e32f5c452c2267d5367589e9864ab1c&append_to_response=videos,credits,similar&language=fr`).then(response => {\n        let acteurs = response.data.credits.cast.splice(0, 4);\n        acteurs = acteurs.map(acteur => {\n          return { ...acteur,\n            img: true\n          };\n        });\n        let youtubeKey = null;\n        if (response.data.videos.results.length !== 0) youtubeKey = response.data.videos.results[0].key;\n        let data = { ...response.data,\n          release_date: response.data.release_date.substr(0, 4),\n          acteurs: acteurs,\n          youtubeKey: youtubeKey\n        };\n        this.setState({\n          movie: data\n        });\n      }).catch(err => {});\n    };\n\n    this.submit = e => {\n      e.preventDefault();\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    Aos.init();\n    this._isMounted = true;\n    if (this._isMounted) this.infoMovie();\n  }\n\n  componentDidUpdate(prevProps) {\n    window.scrollTo(0, 0);\n    if (this.props.match.params.id !== prevProps.match.params.id) this.infoMovie();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    let movieBackdropStyles = null;\n\n    if (!!this.state.movie.backdrop_path) {\n      movieBackdropStyles = {\n        backgroundImage: `url(https://image.tmdb.org/t/p/original/${this.state.movie.backdrop_path})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        minHeight: '100vh',\n        backgroundColor: 'black',\n        backgroundPosition: 'center'\n      };\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Page\",\n      style: movieBackdropStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      \"data-aos\": \"flip-left\",\n      \"data-aos-once\": true,\n      \"data-aos-duration\": \"3000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, this.state.movie && /*#__PURE__*/React.createElement(Presentation, {\n      movie: this.state.movie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 46\n      }\n    }), this.state.movie && /*#__PURE__*/React.createElement(Video, {\n      id: this.state.movie.youtubeKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 46\n      }\n    }))));\n  }\n\n}\n\n;\nexport default withRouter(MovieId);","map":{"version":3,"sources":["/Users/hichamelkaddouri/Desktop/ok/src/Movie/Movie.jsx"],"names":["React","Component","withRouter","axios","Video","Container","Presentation","Aos","MovieId","_isMounted","state","movie","infoMovie","get","props","match","params","id","then","response","acteurs","data","credits","cast","splice","map","acteur","img","youtubeKey","videos","results","length","key","release_date","substr","setState","catch","err","submit","e","preventDefault","componentDidMount","window","scrollTo","init","componentDidUpdate","prevProps","componentWillUnmount","render","movieBackdropStyles","backdrop_path","backgroundImage","backgroundRepeat","backgroundSize","minHeight","backgroundColor","backgroundPosition"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAO,kBAAP;AACA,OAAO,aAAP;;AAEA,MAAMC,OAAN,SAAsBP,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BQ,UAD4B,GACf,KADe;AAAA,SAE5BC,KAF4B,GAEpB;AACJC,MAAAA,KAAK,EAAG;AADJ,KAFoB;;AAAA,SAwB5BC,SAxB4B,GAwBhB,MAAM;AACdT,MAAAA,KAAK,CAACU,GAAN,CAAW,sCAAqC,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,iGAA3E,EACCC,IADD,CACMC,QAAQ,IAAI;AACd,YAAIC,OAAO,GAAGD,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsBC,IAAtB,CAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,CAArC,CAAd;AACAJ,QAAAA,OAAO,GAAGA,OAAO,CAACK,GAAR,CAAYC,MAAM,IAAI;AAC5B,iBAAO,EAAC,GAAGA,MAAJ;AACHC,YAAAA,GAAG,EAAE;AADF,WAAP;AAGH,SAJS,CAAV;AAKA,YAAIC,UAAU,GAAG,IAAjB;AACA,YAAIT,QAAQ,CAACE,IAAT,CAAcQ,MAAd,CAAqBC,OAArB,CAA6BC,MAA7B,KAAwC,CAA5C,EACIH,UAAU,GAAGT,QAAQ,CAACE,IAAT,CAAcQ,MAAd,CAAqBC,OAArB,CAA6B,CAA7B,EAAgCE,GAA7C;AACJ,YAAIX,IAAI,GAAG,EAAC,GAAGF,QAAQ,CAACE,IAAb;AAAmBY,UAAAA,YAAY,EAAEd,QAAQ,CAACE,IAAT,CAAcY,YAAd,CAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,CAArC,CAAjC;AAA0Ed,UAAAA,OAAO,EAAGA,OAApF;AAA6FQ,UAAAA,UAAU,EAAGA;AAA1G,SAAX;AACA,aAAKO,QAAL,CAAc;AAACxB,UAAAA,KAAK,EAAEU;AAAR,SAAd;AACC,OAbL,EAeCe,KAfD,CAeOC,GAAG,IAAI,CAAE,CAfhB;AAgBH,KAzC2B;;AAAA,SA2C5BC,MA3C4B,GA2ClBC,CAAD,IAAO;AACZA,MAAAA,CAAC,CAACC,cAAF;AACH,KA7C2B;AAAA;;AAM5BC,EAAAA,iBAAiB,GAAI;AACjBC,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACApC,IAAAA,GAAG,CAACqC,IAAJ;AACA,SAAKnC,UAAL,GAAkB,IAAlB;AACA,QAAI,KAAKA,UAAT,EACI,KAAKG,SAAL;AACP;;AAEDiC,EAAAA,kBAAkB,CAAEC,SAAF,EAAa;AAC3BJ,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACA,QAAI,KAAK7B,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAxB,KAA+B6B,SAAS,CAAC/B,KAAV,CAAgBC,MAAhB,CAAuBC,EAA1D,EACI,KAAKL,SAAL;AACP;;AAEDmC,EAAAA,oBAAoB,GAAG;AACnB,SAAKtC,UAAL,GAAkB,KAAlB;AACH;;AAyBDuC,EAAAA,MAAM,GAAI;AACN,QAAIC,mBAAmB,GAAG,IAA1B;;AACA,QAAI,CAAC,CAAC,KAAKvC,KAAL,CAAWC,KAAX,CAAiBuC,aAAvB,EAAsC;AAClCD,MAAAA,mBAAmB,GAAG;AAClBE,QAAAA,eAAe,EAAG,2CAA0C,KAAKzC,KAAL,CAAWC,KAAX,CAAiBuC,aAAc,GADzE;AAElBE,QAAAA,gBAAgB,EAAE,WAFA;AAGlBC,QAAAA,cAAc,EAAC,OAHG;AAIlBC,QAAAA,SAAS,EAAC,OAJQ;AAKlBC,QAAAA,eAAe,EAAE,OALC;AAMlBC,QAAAA,kBAAkB,EAAC;AAND,OAAtB;AAQH;;AAED,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAEP,mBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,kBAAS,WAAd;AAA0B,2BAA1B;AAAwC,2BAAkB,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKvC,KAAL,CAAWC,KAAX,iBAAoB,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADzB,EAEK,KAAKD,KAAL,CAAWC,KAAX,iBAAoB,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBiB,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFzB,CADJ,CADJ,CADJ;AAUH;;AAtE2B;;AAuE/B;AAED,eAAe1B,UAAU,CAACM,OAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport Video from './Video/Video';\nimport { Container } from 'react-bootstrap';\nimport Presentation from './Presentation/Presentation';\nimport Aos from 'aos';\nimport 'aos/dist/aos.css';\nimport './Movie.css';\n\nclass MovieId extends Component {\n    _isMounted = false;\n    state = {\n        movie : ''\n    };\n\n    componentDidMount () {\n        window.scrollTo(0, 0);\n        Aos.init();\n        this._isMounted = true;\n        if (this._isMounted)\n            this.infoMovie();\n    };\n\n    componentDidUpdate (prevProps) {\n        window.scrollTo(0, 0);\n        if (this.props.match.params.id !== prevProps.match.params.id)\n            this.infoMovie();\n    };\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    };\n\n    infoMovie = () => {\n        axios.get(`https://api.themoviedb.org/3/movie/${this.props.match.params.id}?api_key=1e32f5c452c2267d5367589e9864ab1c&append_to_response=videos,credits,similar&language=fr`)\n        .then(response => {\n            let acteurs = response.data.credits.cast.splice(0, 4);\n            acteurs = acteurs.map(acteur => {\n                return {...acteur,\n                    img: true\n                }\n            }) \n            let youtubeKey = null\n            if (response.data.videos.results.length !== 0)\n                youtubeKey = response.data.videos.results[0].key\n            let data = {...response.data, release_date: response.data.release_date.substr(0, 4), acteurs : acteurs, youtubeKey : youtubeKey }\n            this.setState({movie: data})\n            }\n        )\n        .catch(err => {})\n    };\n\n    submit = (e) => {\n        e.preventDefault();\n    };\n\n    render () { \n        let movieBackdropStyles = null;\n        if (!!this.state.movie.backdrop_path) {\n            movieBackdropStyles = {\n                backgroundImage: `url(https://image.tmdb.org/t/p/original/${this.state.movie.backdrop_path})`,\n                backgroundRepeat: 'no-repeat',\n                backgroundSize:'cover',\n                minHeight:'100vh',\n                backgroundColor: 'black',\n                backgroundPosition:'center' \n            };\n        }\n\n        return (\n            <div className=\"Page\" style={movieBackdropStyles}>\n                <Container className='Container'>\n                    <div data-aos=\"flip-left\" data-aos-once data-aos-duration=\"3000\">\n                        {this.state.movie && <Presentation movie={this.state.movie}/>}\n                        {this.state.movie && <Video id={this.state.movie.youtubeKey}/>}\n                    </div>\n                </Container>\n            </div>\n        );\n    };\n};\n\nexport default withRouter(MovieId);\n"]},"metadata":{},"sourceType":"module"}