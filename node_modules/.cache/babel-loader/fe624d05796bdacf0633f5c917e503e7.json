{"ast":null,"code":"var _jsxFileName = \"/Users/hichamelkaddouri/Desktop/ok/src/MyCompte/Profil/InfoUser/InfoUser.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Form, Input, Button } from 'muicss/react';\nimport { toast } from 'react-toastify';\nimport './infoUser.css';\nimport axios from 'axios';\ntoast.configure();\n\nfunction InfoUser() {\n  const FIREBASE_API_KEY = 'AIzaSyCO-8B9Zx0Mdwpa7oyA6QWgD5m7bXdNGs4';\n  const [uid, setUid] = useState('');\n  const [idToken, setIdToken] = useState('');\n  const [login, setLogin] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  useEffect(() => {\n    setUid(localStorage.getItem('localId'));\n    setIdToken(localStorage.getItem('idToken'));\n    axios.get(`https://hypertube-6cd18.firebaseio.com/${localStorage.getItem('localId')}/users.json`).then(response => {\n      if (response.data) {\n        setFirstName(response.data.firstName);\n        setLastName(response.data.lastName);\n        setLogin(response.data.login);\n        setEmail(response.data.email);\n      } else {\n        console.log('pas de donner');\n      }\n    });\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const Infos = {\n      email,\n      login,\n      firstName,\n      lastName\n    };\n    const authData = {\n      idToken,\n      email,\n      returnSecureToken: true\n    };\n    axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:update?key=${FIREBASE_API_KEY}`, authData).then(response => {\n      axios.put(`https://hypertube-6cd18.firebaseio.com/${uid}/users.json`, Infos).then(response => {\n        toast.success(`${login}, vos informations ont été prise en compte `, {\n          position: \"top-center\",\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: false,\n          progress: undefined\n        });\n      });\n    }).catch(err => {\n      console.log('error =', err.message);\n      toast.error(`Pour réactualiser vos informations, veuillez vous reconnectez`, {\n        position: \"top-center\",\n        autoClose: 4000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        progress: undefined\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blockInfos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      color: 'white',\n      fontFamily: 'Lexend Peta',\n      fontSize: '22px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \" Infos utilisateurs \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contentForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    label: \"Login\",\n    minLength: \"3\",\n    maxLength: \"30\",\n    pattern: \"[A-Za-z]{1,30}\",\n    value: login,\n    onChange: e => setLogin(e.target.value),\n    floatingLabel: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Nom\",\n    minLength: \"3\",\n    maxLength: \"30\",\n    pattern: \"[A-Za-z]{1,30}\",\n    value: firstName || '',\n    onChange: e => setFirstName(e.target.value),\n    floatingLabel: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Pr\\xE9nom\",\n    minLength: \"3\",\n    maxLength: \"30\",\n    pattern: \"[A-Za-z]{1,30}\",\n    value: lastName || '',\n    onChange: e => setLastName(e.target.value),\n    floatingLabel: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Adresse Email\",\n    minLength: \"3\",\n    maxLength: \"30\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    floatingLabel: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"raised\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n}\n\nexport default InfoUser;","map":{"version":3,"sources":["/Users/hichamelkaddouri/Desktop/ok/src/MyCompte/Profil/InfoUser/InfoUser.jsx"],"names":["React","useState","useEffect","Form","Input","Button","toast","axios","configure","InfoUser","FIREBASE_API_KEY","uid","setUid","idToken","setIdToken","login","setLogin","firstName","setFirstName","lastName","setLastName","email","setEmail","localStorage","getItem","get","then","response","data","console","log","handleSubmit","e","preventDefault","Infos","authData","returnSecureToken","post","put","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","progress","undefined","catch","err","message","error","color","fontFamily","fontSize","target","value"],"mappings":"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","sourcesContent":["import React ,{useState,useEffect}from 'react'\nimport {Form,Input,Button } from 'muicss/react'\nimport { toast} from 'react-toastify';\nimport './infoUser.css'\nimport axios from 'axios'\ntoast.configure();\n\nfunction InfoUser() {\n    const FIREBASE_API_KEY = 'AIzaSyCO-8B9Zx0Mdwpa7oyA6QWgD5m7bXdNGs4'\n\n        const [uid, setUid] = useState('')\n        const [idToken, setIdToken] = useState('')\n        const [login, setLogin] = useState('')\n        const [firstName, setFirstName] = useState('')\n        const [lastName, setLastName] = useState('')\n        const [email, setEmail] = useState('')\n\n        useEffect(() => {\n\n            setUid(localStorage.getItem('localId'))\n            setIdToken(localStorage.getItem('idToken'))\n            axios.get(`https://hypertube-6cd18.firebaseio.com/${localStorage.getItem('localId')}/users.json`)\n            .then(response =>{\n                if(response.data){\n                    setFirstName(response.data.firstName);\n                    setLastName(response.data.lastName);\n                    setLogin(response.data.login);\n                    setEmail(response.data.email)\n                }else{\n                    console.log('pas de donner')\n                }\n              \n            })\n        }, [])\n\n        const handleSubmit =e=>{\n            e.preventDefault()\n                const Infos = {email, login, firstName, lastName}\n                const authData = {idToken, email, returnSecureToken: true};\n\n                axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:update?key=${FIREBASE_API_KEY}`,authData)\n                .then(response=>{\n                    \n                    axios.put(`https://hypertube-6cd18.firebaseio.com/${uid}/users.json`,Infos).then(response=>{\n                    toast.success(`${login}, vos informations ont été prise en compte `, {position: \"top-center\", autoClose: 3000, hideProgressBar: false,closeOnClick: true,pauseOnHover: false,progress: undefined})})\n                    \n                }).catch(err =>{\n                    console.log('error =',err.message)\n                        toast.error(`Pour réactualiser vos informations, veuillez vous reconnectez`, {position: \"top-center\", autoClose: 4000, hideProgressBar: false,closeOnClick: true,pauseOnHover: false,progress: undefined});\n            })\n        }\n\n    return (\n        <div className='blockInfos' >\n            <div className='title'>\n                <h4 style={{color:'white',fontFamily: 'Lexend Peta',fontSize:'22px'}}> Infos utilisateurs </h4>\n            </div>\n            <div className='contentForm' onSubmit={handleSubmit}>\n                <Form>\n                    <Input label=\"Login\" minLength=\"3\" maxLength=\"30\" pattern=\"[A-Za-z]{1,30}\" value={login} onChange={e=>setLogin(e.target.value)}  floatingLabel={true} required={true} />\n                    <Input label=\"Nom\" minLength=\"3\" maxLength=\"30\" pattern=\"[A-Za-z]{1,30}\" value={firstName || ''} onChange={e=>setFirstName(e.target.value)}  floatingLabel={true} required={true} />\n                    <Input label=\"Prénom\" minLength=\"3\" maxLength=\"30\" pattern=\"[A-Za-z]{1,30}\" value={lastName || ''} onChange={e=>setLastName(e.target.value)} floatingLabel={true} required={true} />\n                    <Input label=\"Adresse Email\" minLength=\"3\" maxLength=\"30\"  value={email} onChange={e=>setEmail(e.target.value)}  floatingLabel={true} required={true} />\n                    <Button variant=\"raised\">Submit</Button>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\nexport default InfoUser"]},"metadata":{},"sourceType":"module"}