{"ast":null,"code":"var _jsxFileName = \"/Users/hichamelkaddouri/Desktop/ok/src/UserAuth/Register/Register.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport * as regex from '../Utility/Regex';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport ImgSignIn from '../../Picture/connexion.png';\nimport './register.css';\nimport { ControlPointDuplicateOutlined } from '@material-ui/icons';\ntoast.configure();\n\nfunction Register({\n  history\n}) {\n  const FIREBASE_API_KEY = 'AIzaSyCO-8B9Zx0Mdwpa7oyA6QWgD5m7bXdNGs4';\n  console.log(FIREBASE_API_KEY);\n  const storeData = {\n    login: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  };\n  const errorData = {\n    login: '3 caracteres min speciaux, chiffres refuser',\n    email: 'Votre adresse mail n\\'est pas valide',\n    password: 'Au moins: 1Min, 1Maj et 1chiffre',\n    confirmPassword: 'Au moins: 1 Min, 1 Maj et 1 chiffre'\n  };\n  const [data, setData] = useState(storeData);\n  const [messageError] = useState(errorData);\n  const [inputName, setInputName] = useState('');\n  const [matchPwd, setMatchPwd] = useState('');\n  const {\n    login,\n    email,\n    password,\n    confirmPassword\n  } = data;\n  useEffect(() => {\n    const resultMatch = password === confirmPassword ? false : true;\n    setMatchPwd(resultMatch);\n\n    if (login === '' && email === '' && password === '' && confirmPassword === '') {\n      setInputName('');\n    }\n  }, [data]);\n\n  const dataInput = e => {\n    const valueInput = e.target.value;\n    const nameInput = e.target.id;\n    valueInput.match(regex[nameInput]) ? setInputName('') : setInputName(nameInput);\n    cleanedValue(valueInput, nameInput);\n  };\n\n  const cleanedValue = (value, name) => setData({ ...data,\n    [name]: value\n  });\n\n  const dataSignUp = {\n    email,\n    password,\n    returnSecureToken: true\n  };\n  const userLogin = {\n    login,\n    email\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${FIREBASE_API_KEY}`, dataSignUp).then(response => {\n      const uid = response.data.localId;\n      axios.put(`https://hypertube-6cd18.firebaseio.com/${uid}/users.json/`, userLogin);\n      toast.info(`votre compte a bien étè creer ${login}`, {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        progress: undefined\n      });\n      setTimeout(() => {\n        history.push('/Login');\n      }, 2000);\n    }).catch(err => {\n      toast.error(`adresse mail existante`, {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        progress: undefined\n      });\n    });\n  };\n\n  const errorMessage = inputName && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red',\n      fontStyle: 'italic'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 41\n    }\n  }, \" \", messageError[inputName]);\n  const messageMatchPwd = matchPwd && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: '#0000FF',\n      fontStyle: 'italic'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 43\n    }\n  }, \"Les mots de passes doivent etre identique !\");\n  const btnDisplay = inputName === '' && password === confirmPassword && login.length >= 3 && email.length >= 7 && password.length >= 6 && confirmPassword.length >= 6 ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 6\n    }\n  }, \"Inscription\") : /*#__PURE__*/React.createElement(\"button\", {\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 58\n    }\n  }, \"Inscription\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signUp_form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userSign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 36\n    }\n  }, \"  \", /*#__PURE__*/React.createElement(\"img\", {\n    src: ImgSignIn,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 56\n    }\n  }), \" \"), \" \"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"Inscription\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form_input\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, errorMessage, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, \"Login\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 54\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"login\",\n    type: \"text\",\n    minLength: \"4\",\n    maxLength: \"8\",\n    placeholder: \"contient au moins 4 caract\\xE9res\",\n    onChange: dataInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 33\n    }\n  }, \"Email\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 54\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    minLength: \"7\",\n    maxLength: \"30\",\n    placeholder: \"indiquer votre email\",\n    onChange: dataInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputBox \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }, \"Password\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 57\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    minLength: \"6\",\n    maxLength: \"20\",\n    placeholder: \"contient au moins 6 caract\\xE9res\",\n    onChange: dataInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  }), messageMatchPwd), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputBox \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }, \"Confirm Password\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 65\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"confirmPassword\",\n    type: \"password\",\n    minLength: \"6\",\n    maxLength: \"20\",\n    placeholder: \"contient au moins 6 caract\\xE9res\",\n    onChange: dataInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 33\n    }\n  }), messageMatchPwd), btnDisplay), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"linkContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/Login\",\n    className: \"simpleLink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 33\n    }\n  }, \" d\\xE9ja inscrit ? connectez-vous\")))));\n}\n\nexport default React.memo(Register);","map":{"version":3,"sources":["/Users/hichamelkaddouri/Desktop/ok/src/UserAuth/Register/Register.jsx"],"names":["React","useState","useEffect","Link","axios","regex","toast","ImgSignIn","ControlPointDuplicateOutlined","configure","Register","history","FIREBASE_API_KEY","console","log","storeData","login","email","password","confirmPassword","errorData","data","setData","messageError","inputName","setInputName","matchPwd","setMatchPwd","resultMatch","dataInput","e","valueInput","target","value","nameInput","id","match","cleanedValue","name","dataSignUp","returnSecureToken","userLogin","handleSubmit","preventDefault","post","then","response","uid","localId","put","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","progress","undefined","setTimeout","push","catch","err","error","errorMessage","color","fontStyle","messageMatchPwd","btnDisplay","length","memo"],"mappings":"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","sourcesContent":["import React , {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport axios from 'axios'\nimport * as regex from '../Utility/Regex'\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css' \nimport ImgSignIn from '../../Picture/connexion.png'\nimport './register.css'\nimport { ControlPointDuplicateOutlined } from '@material-ui/icons';\n\ntoast.configure();\n\n\nfunction Register({history}) {\n\n    const FIREBASE_API_KEY = 'AIzaSyCO-8B9Zx0Mdwpa7oyA6QWgD5m7bXdNGs4'\n    console.log(FIREBASE_API_KEY)\n\n    const storeData={   login:'',\n                        email:'',\n                        password:'',\n                        confirmPassword:'',\n                    }\n\n    const errorData={   login: '3 caracteres min speciaux, chiffres refuser',\n                        email: 'Votre adresse mail n\\'est pas valide',\n                        password: 'Au moins: 1Min, 1Maj et 1chiffre' ,\n                        confirmPassword: 'Au moins: 1 Min, 1 Maj et 1 chiffre'\n                    }\n\n\n    const [data, setData] = useState(storeData)\n    const [messageError] = useState(errorData)\n    const [inputName, setInputName] = useState('')\n    const [matchPwd, setMatchPwd] = useState('')\n\n    const {login , email , password , confirmPassword} = data\n\n\n    useEffect(() => {\n       const resultMatch = password === confirmPassword ? false : true;\n       setMatchPwd(resultMatch);\n       if(login === '' && email === '' && password === '' && confirmPassword === ''){setInputName('')}\n    }, [data])\n\n\n    const dataInput =(e)=>{\n\n        const valueInput = e.target.value\n        const nameInput = e.target.id\n\n        valueInput.match(regex[nameInput]) ? setInputName('') : setInputName(nameInput)\n        cleanedValue(valueInput, nameInput)\n    }\n\n    const cleanedValue =(value,name)=> setData({...data, [name]: value })\n\n    const dataSignUp = { email, password, returnSecureToken: true }\n    const userLogin ={ login , email }\n\n    const handleSubmit =(e)=>{\n        e.preventDefault()\n\n        axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${FIREBASE_API_KEY}`,dataSignUp).then((response)=>{\n            \n            const uid = response.data.localId\n            axios.put(`https://hypertube-6cd18.firebaseio.com/${uid}/users.json/`,userLogin)\n\n            toast.info(`votre compte a bien étè creer ${login}`, {position: \"top-center\", autoClose: 3000, hideProgressBar: false,closeOnClick: true,pauseOnHover: false,progress: undefined});\n            setTimeout(() => { history.push('/Login') }, 2000);\n            \n        }).catch((err)=>{\n            toast.error(`adresse mail existante`, {position: \"top-center\", autoClose: 3000, hideProgressBar: false,closeOnClick: true,pauseOnHover: false,progress: undefined});\n\n        })\n    }\n\n    const errorMessage = inputName &&  (<p style={{ color: 'red',fontStyle: 'italic'}}> {messageError[inputName]}</p>)\n    const messageMatchPwd = matchPwd &&  (<p style={{ color: '#0000FF',fontStyle: 'italic'}}>Les mots de passes doivent etre identique !</p>)\n    const btnDisplay = inputName === '' && password === confirmPassword && login.length >= 3 && email.length >= 7 && password.length >= 6 && confirmPassword.length >= 6 ? \n    (<button className='submit'>Inscription</button>) : (<button disabled>Inscription</button>)\n\nreturn (\n\n<div className='signUp_form'>\n    <div className='container'>  \n        <div className='form_left'></div>\n        <div className='form_right'>\n        <div className='userSign'> <Link to='/Login'>  <img src={ImgSignIn} alt=\"\"/> </Link> </div>\n\n                <h2>Inscription</h2>\n                    <form className='form_input' onSubmit={handleSubmit}>\n\n                            {errorMessage}\n                            <div className='inputBox'>\n                                <label>Login</label> <br/>\n                                <input id='login' type='text' \n                                 minLength='4' maxLength='8'\n                                 placeholder='contient au moins 4 caractéres'\n                                onChange={dataInput}/>\n                                \n                            </div>\n                            <div className='inputBox'>\n                                <label>Email</label> <br/>\n                                <input  id='email' type='email'\n                                        minLength=\"7\" maxLength=\"30\"\n                                        placeholder='indiquer votre email'\n                                onChange={dataInput}/>\n                            </div>\n                            <div className='inputBox '>\n                                <label>Password</label> <br/>\n                                <input  id='password' type='password' \n                                        minLength=\"6\" maxLength=\"20\"\n                                        placeholder='contient au moins 6 caractéres'\n                                onChange={dataInput}/>\n                                {messageMatchPwd}\n                            </div>\n                            <div className='inputBox '>\n                                <label>Confirm Password</label> <br/>\n                                <input  id='confirmPassword' type='password' \n                                        minLength=\"6\" maxLength=\"20\"\n                                        placeholder='contient au moins 6 caractéres'\n                                onChange={dataInput}/>\n                                {messageMatchPwd}\n                            </div> \n\n                                {btnDisplay}\n\n                    </form>\n\n\n                        <div className='linkContainer'>\n                                <Link to='/Login' className='simpleLink'> déja inscrit ? connectez-vous</Link>\n                        </div>\n\n        </div>\n    </div> \n</div>    \n        \n    )\n       \n}\n\nexport default React.memo(Register)"]},"metadata":{},"sourceType":"module"}