{"ast":null,"code":"/**\n * MUI CSS/JS form helpers module\n * @module lib/forms.py\n */\n'use strict';\n\nvar jqLite = require('./jqLite');\n/**\n * Menu position/size/scroll helper\n * @returns {Object} Object with keys 'height', 'top', 'scrollTop'\n */\n\n\nfunction getMenuPositionalCSSFn(wrapperEl, menuEl, selectedRow) {\n  var viewHeight = document.documentElement.clientHeight,\n      numRows = menuEl.children.length; // determine menu height\n\n  var h = parseInt(menuEl.offsetHeight),\n      height = Math.min(h, viewHeight); // determine row height\n\n  var p = parseInt(jqLite.css(menuEl, 'padding-top')),\n      rowHeight = (h - 2 * p) / numRows; // determine 'top'\n\n  var top, initTop, minTop, maxTop;\n  initTop = -1 * selectedRow * rowHeight;\n  minTop = -1 * wrapperEl.getBoundingClientRect().top;\n  maxTop = viewHeight - height + minTop;\n  top = Math.min(Math.max(initTop, minTop), maxTop); // determine 'scrollTop'\n\n  var scrollTop = 0,\n      scrollIdeal,\n      scrollMax;\n\n  if (h > viewHeight) {\n    scrollIdeal = top + p + selectedRow * rowHeight;\n    scrollMax = numRows * rowHeight + 2 * p - height;\n    scrollTop = Math.min(scrollIdeal, scrollMax);\n  }\n\n  return {\n    'height': height + 'px',\n    'top': top + 'px',\n    'scrollTop': scrollTop\n  };\n}\n/** Define module API */\n\n\nmodule.exports = {\n  getMenuPositionalCSS: getMenuPositionalCSSFn\n};","map":{"version":3,"sources":["/Users/hichamelkaddouri/Desktop/ok/node_modules/muicss/lib/js/lib/forms.js"],"names":["jqLite","require","getMenuPositionalCSSFn","wrapperEl","menuEl","selectedRow","viewHeight","document","documentElement","clientHeight","numRows","children","length","h","parseInt","offsetHeight","height","Math","min","p","css","rowHeight","top","initTop","minTop","maxTop","getBoundingClientRect","max","scrollTop","scrollIdeal","scrollMax","module","exports","getMenuPositionalCSS"],"mappings":"AAAA;;;;AAKA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;AAGA;;;;;;AAIA,SAASC,sBAAT,CAAgCC,SAAhC,EAA2CC,MAA3C,EAAmDC,WAAnD,EAAgE;AAC9D,MAAIC,UAAU,GAAGC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C;AAAA,MACIC,OAAO,GAAGN,MAAM,CAACO,QAAP,CAAgBC,MAD9B,CAD8D,CAI9D;;AACA,MAAIC,CAAC,GAAGC,QAAQ,CAACV,MAAM,CAACW,YAAR,CAAhB;AAAA,MACIC,MAAM,GAAGC,IAAI,CAACC,GAAL,CAASL,CAAT,EAAYP,UAAZ,CADb,CAL8D,CAQ9D;;AACA,MAAIa,CAAC,GAAGL,QAAQ,CAACd,MAAM,CAACoB,GAAP,CAAWhB,MAAX,EAAmB,aAAnB,CAAD,CAAhB;AAAA,MACIiB,SAAS,GAAG,CAACR,CAAC,GAAG,IAAIM,CAAT,IAAcT,OAD9B,CAT8D,CAY9D;;AACA,MAAIY,GAAJ,EAASC,OAAT,EAAkBC,MAAlB,EAA0BC,MAA1B;AAEAF,EAAAA,OAAO,GAAG,CAAC,CAAD,GAAKlB,WAAL,GAAmBgB,SAA7B;AACAG,EAAAA,MAAM,GAAG,CAAC,CAAD,GAAKrB,SAAS,CAACuB,qBAAV,GAAkCJ,GAAhD;AACAG,EAAAA,MAAM,GAAInB,UAAU,GAAGU,MAAd,GAAwBQ,MAAjC;AAEAF,EAAAA,GAAG,GAAGL,IAAI,CAACC,GAAL,CAASD,IAAI,CAACU,GAAL,CAASJ,OAAT,EAAkBC,MAAlB,CAAT,EAAoCC,MAApC,CAAN,CAnB8D,CAqB9D;;AACA,MAAIG,SAAS,GAAG,CAAhB;AAAA,MACIC,WADJ;AAAA,MAEIC,SAFJ;;AAIA,MAAIjB,CAAC,GAAGP,UAAR,EAAoB;AAClBuB,IAAAA,WAAW,GAAGP,GAAG,GAAGH,CAAN,GAAUd,WAAW,GAAGgB,SAAtC;AACAS,IAAAA,SAAS,GAAGpB,OAAO,GAAGW,SAAV,GAAsB,IAAIF,CAA1B,GAA8BH,MAA1C;AACAY,IAAAA,SAAS,GAAGX,IAAI,CAACC,GAAL,CAASW,WAAT,EAAsBC,SAAtB,CAAZ;AACD;;AAED,SAAO;AACL,cAAUd,MAAM,GAAG,IADd;AAEL,WAAOM,GAAG,GAAG,IAFR;AAGL,iBAAaM;AAHR,GAAP;AAKD;AAGD;;;AACAG,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,oBAAoB,EAAE/B;AADP,CAAjB","sourcesContent":["/**\n * MUI CSS/JS form helpers module\n * @module lib/forms.py\n */\n\n'use strict';\n\nvar jqLite = require('./jqLite');\n\n\n/**\n * Menu position/size/scroll helper\n * @returns {Object} Object with keys 'height', 'top', 'scrollTop'\n */\nfunction getMenuPositionalCSSFn(wrapperEl, menuEl, selectedRow) {\n  var viewHeight = document.documentElement.clientHeight,\n      numRows = menuEl.children.length;\n\n  // determine menu height\n  var h = parseInt(menuEl.offsetHeight),\n      height = Math.min(h, viewHeight);\n\n  // determine row height\n  var p = parseInt(jqLite.css(menuEl, 'padding-top')),\n      rowHeight = (h - 2 * p) / numRows;\n\n  // determine 'top'\n  var top, initTop, minTop, maxTop;\n\n  initTop = -1 * selectedRow * rowHeight;\n  minTop = -1 * wrapperEl.getBoundingClientRect().top;\n  maxTop = (viewHeight - height) + minTop;\n\n  top = Math.min(Math.max(initTop, minTop), maxTop);\n\n  // determine 'scrollTop'\n  var scrollTop = 0,\n      scrollIdeal,\n      scrollMax;\n\n  if (h > viewHeight) {\n    scrollIdeal = top + p + selectedRow * rowHeight;\n    scrollMax = numRows * rowHeight + 2 * p - height;\n    scrollTop = Math.min(scrollIdeal, scrollMax);\n  }\n\n  return {\n    'height': height + 'px',\n    'top': top + 'px',\n    'scrollTop': scrollTop\n  };\n}\n\n\n/** Define module API */\nmodule.exports = {\n  getMenuPositionalCSS: getMenuPositionalCSSFn\n};\n"]},"metadata":{},"sourceType":"script"}